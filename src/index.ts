import { Telegraf, Context } from 'telegraf';
import * as dotenv from 'dotenv';
import { LatexRenderer } from './latexRenderer';
import { OpenRouterService } from './openRouterService';
import * as fs from 'fs';
import * as path from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
if (!process.env.BOT_TOKEN) {
  console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
  console.log('–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç—É–¥–∞ BOT_TOKEN=your_bot_token_here');
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞ OpenRouter
if (!process.env.OPENROUTER_API_KEY) {
  console.error('‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
  console.log('–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç—É–¥–∞ OPENROUTER_API_KEY=your_api_key_here');
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–µ–Ω–¥–µ—Ä–µ—Ä–∞ LaTeX
const latexRenderer = new LatexRenderer();

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ OpenRouter
const openRouterService = new OpenRouterService(
  process.env.OPENROUTER_API_KEY!,
  process.env.OPENROUTER_MODEL || 'meta-llama/llama-3.1-8b-instruct:free'
);

// –ü–∞–ø–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø—Ä—è–º—É—é –≤ AI

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx: Context) => {
  const welcomeMessage = `
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Homework Bot —Å AI!

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ü–æ–º–æ—â—å
/ping - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞
/about - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
/latex - –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å LaTeX —Ñ–æ—Ä–º—É–ª—É –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

ü§ñ –§—É–Ω–∫—Ü–∏–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –æ—Ç–≤–µ—á—É
‚Ä¢ –†–µ—à–∞—é —É—Ä–∞–≤–Ω–µ–Ω–∏—è, –æ–±—ä—è—Å–Ω—è—é –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏, –ø–æ–º–æ–≥–∞—é —Å –∑–∞–¥–∞—á–∞–º–∏
‚Ä¢ **–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏** –∑–∞–¥–∞—á, —É—Ä–∞–≤–Ω–µ–Ω–∏–π, –¥–∏–∞–≥—Ä–∞–º–º - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é!
‚Ä¢ **–ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è** - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –≤–æ–ø—Ä–æ—Å–æ–º!
‚Ä¢ –û—Ç–≤–µ—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π LaTeX —Ñ–æ—Ä–º—É–ª
‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π

üìê LaTeX —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ LaTeX —Ñ–æ—Ä–º—É–ª—É, –∏ —è –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –µ—ë –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: –¥—Ä–æ–±–∏, –∫–æ—Ä–Ω–∏, –∏–Ω—Ç–µ–≥—Ä–∞–ª—ã, —Å—É–º–º—ã, –≥—Ä–µ—á–µ—Å–∫–∏–µ –±—É–∫–≤—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ
‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã: $\\frac{a}{b}$, $\\sqrt{x^2 + y^2}$, $\\sum_{i=1}^{n} i$

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É —Å –ø–æ–º–æ—â—å—é AI! üòä
  `;
  
  ctx.reply(welcomeMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.help((ctx: Context) => {
  const helpMessage = `
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/ping - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
/about - –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –±–æ—Ç–µ
/latex - –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å LaTeX —Ñ–æ—Ä–º—É–ª—É –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

ü§ñ –§—É–Ω–∫—Ü–∏–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å - –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç
‚Ä¢ –†–µ—à–∞—é —É—Ä–∞–≤–Ω–µ–Ω–∏—è, –∑–∞–¥–∞—á–∏, –æ–±—ä—è—Å–Ω—è—é –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
‚Ä¢ **–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏** –∑–∞–¥–∞—á, —É—Ä–∞–≤–Ω–µ–Ω–∏–π, –¥–∏–∞–≥—Ä–∞–º–º - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é!
‚Ä¢ **–ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è** - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –≤–æ–ø—Ä–æ—Å–æ–º!
‚Ä¢ –û—Ç–≤–µ—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å LaTeX –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏, —Ñ–∏–∑–∏–∫–∏, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è

üìê LaTeX —Ñ–æ—Ä–º—É–ª—ã:
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ä–º—É–ª—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: $—Ñ–æ—Ä–º—É–ª–∞$
‚Ä¢ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /latex —Ñ–æ—Ä–º—É–ª–∞
‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã:
  - $\\frac{a}{b}$ - –¥—Ä–æ–±—å
  - $\\sqrt{x^2 + y^2}$ - –∫–æ—Ä–µ–Ω—å
  - $\\sum_{i=1}^{n} i$ - —Å—É–º–º–∞
  - $\\int_0^\\infty e^{-x} dx$ - –∏–Ω—Ç–µ–≥—Ä–∞–ª
  - $\\alpha + \\beta = \\gamma$ - –≥—Ä–µ—á–µ—Å–∫–∏–µ –±—É–∫–≤—ã

üí° –°–æ–≤–µ—Ç: –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –æ—Ç–≤–µ—á—É —Å –ø–æ–º–æ—â—å—é AI!
  `;
  
  ctx.reply(helpMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ping
bot.command('ping', (ctx: Context) => {
  ctx.reply('üèì Pong! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
bot.command('about', (ctx: Context) => {
  const aboutMessage = `
ü§ñ Homework Bot v2.2.0 —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é

–°–æ–∑–¥–∞–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º:
‚Ä¢ TypeScript
‚Ä¢ Telegraf.js
‚Ä¢ Node.js
‚Ä¢ OpenRouter API (–¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏)
‚Ä¢ KaTeX (–¥–ª—è LaTeX —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞)
‚Ä¢ Marked (–¥–ª—è Markdown —Ä–∞–∑–º–µ—Ç–∫–∏)

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –¥–æ–º–∞—à–Ω–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏, –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–¥–∞—á –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç LaTeX —Ñ–æ—Ä–º—É–ª—ã –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!
  `;
  
  ctx.reply(aboutMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /latex
bot.command('latex', async (ctx: Context) => {
  const messageText = (ctx.message as any)?.text || '';
  const latexFormula = messageText.replace('/latex', '').trim();
  
  if (!latexFormula) {
    ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ LaTeX —Ñ–æ—Ä–º—É–ª—É –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /latex\n\n–ü—Ä–∏–º–µ—Ä: /latex \\frac{a}{b}');
    return;
  }
  
  try {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    const processingMessage = await ctx.reply('üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é LaTeX —Ñ–æ—Ä–º—É–ª—É...');
    
    // –†–µ–Ω–¥–µ—Ä–∏–º LaTeX –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const imagePath = await latexRenderer.renderLatexToPng(latexFormula);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    await ctx.replyWithPhoto(
      { source: imagePath },
      {
        caption: `üìê LaTeX —Ñ–æ—Ä–º—É–ª–∞:\n\`${latexFormula}\``,
        parse_mode: 'Markdown'
      }
    );
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    await ctx.deleteMessage(processingMessage.message_id);
    
    // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    latexRenderer.cleanup(imagePath);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ LaTeX:', error);
    const errorMessage = error instanceof Error ? error.message : String(error);
    ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ LaTeX —Ñ–æ—Ä–º—É–ª—ã:\n\`${errorMessage}\``, {
      parse_mode: 'Markdown'
    });
  }
});

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on(['text', 'photo'], async (ctx: Context) => {
  try {
    const message = ctx.message as any;
    const userText = message.text || '';
    const photo = message.photo;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
    const hasText = userText && userText.trim().length > 0;
    const hasImage = photo && photo.length > 0;
    
    if (!hasText && !hasImage) {
      await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await ctx.sendChatAction('typing');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    const processingMessage = await ctx.reply('ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å –¥—É–º–∞–µ—Ç...');
    
    // –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI
    const systemPrompt = `–†–µ—à–∞–π –∑–∞–¥–∞—á–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —É—á–∏—Ç–µ–ª—å –≤ —à–∫–æ–ª–µ. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–æ–≤, –Ω–∞–ø–∏—à–∏ —á—Ç–æ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –Ω–µ –≤ —Ç–µ–º—É –∏ —Ç—ã –Ω–µ –±—É–¥–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∏—Å–ø–æ–ª—å–∑—É—è Markdown —Ä–∞–∑–º–µ—Ç–∫—É.

–î–∞–≤–∞–π –ö–†–ê–¢–ö–ò–ï —Ä–µ—à–µ–Ω–∏—è –±–µ–∑ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π. –¢–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏.

–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
- –ó–∞–≥–æ–ª–æ–≤–∫–∏: # ## ###
- **–∂–∏—Ä–Ω—ã–π**, *–∫—É—Ä—Å–∏–≤*
- –°–ø–∏—Å–∫–∏: - –∏–ª–∏ 1.
- –ö–æ–¥: \`\`\`—è–∑—ã–∫\`\`\`
- –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞: $—Ñ–æ—Ä–º—É–ª–∞$ –∏–ª–∏ $$—Ñ–æ—Ä–º—É–ª–∞$$

–ë—É–¥—å –∫—Ä–∞—Ç–∫–∏–º –∏ –ø–æ –¥–µ–ª—É.`;

    let aiResponse: string;
    
    if (hasImage) {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const largestPhoto = photo[photo.length - 1];
      const fileId = largestPhoto.file_id;
      
      // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –æ—Ç Telegram
      const fileLink = await ctx.telegram.getFileLink(fileId);
      const response = await fetch(fileLink);
      const imageBuffer = await response.arrayBuffer();
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64 –Ω–∞–ø—Ä—è–º—É—é
      const base64Image = Buffer.from(imageBuffer).toString('base64');
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è AI
      const messageForAI = hasText 
        ? userText 
        : '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø–æ–º–æ–≥–∏ —Å –∑–∞–¥–∞—á–µ–π';
      
      // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      aiResponse = await openRouterService.sendMessageWithImageBuffer(
        messageForAI,
        base64Image,
        'image/jpeg',
        systemPrompt
      );
    } else {
      // –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      aiResponse = await openRouterService.sendUserMessage(userText, systemPrompt);
    }
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    await ctx.deleteMessage(processingMessage.message_id);
    
    // –†–µ–Ω–¥–µ—Ä–∏–º –æ—Ç–≤–µ—Ç AI –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Markdown + LaTeX
    const responseImagePath = await latexRenderer.renderMarkdownWithLatexToPng(aiResponse, {
      fontSize: 18,
      maxWidth: 1000,
      textAlign: 'left',
      lineHeight: 1.4,
    });

    // –ü–æ–¥–ø–∏—Å—å –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    const caption = 'ü§ñ –û—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏';

    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–û–±—ä—è—Å–Ω–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    const explainId = `explain_${Date.now()}_${Math.random().toString(36).slice(2, 9)}`;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
    (global as any).explainData = (global as any).explainData || {};
    (global as any).explainData[explainId] = {
      text: userText,
      hasImage: hasImage,
      imageData: hasImage ? {
        fileId: photo[photo.length - 1].file_id
      } : null
    };
    
    const keyboard = {
      inline_keyboard: [[
        {
          text: 'üìö –û–±—ä—è—Å–Ω–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ',
          callback_data: explainId
        }
      ]]
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
    await ctx.replyWithPhoto({ source: responseImagePath }, {
      caption: caption,
      reply_markup: keyboard
    });

    // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –æ—Ç–≤–µ—Ç–∞
    latexRenderer.cleanup(responseImagePath);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    const errorMessage = error instanceof Error ? error.message : String(error);
    
    // –ï—Å–ª–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç
    const fallbackResponses = [
      '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ–π—Ä–æ—Å–µ—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
      '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    ];
    
    const randomResponse = fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)];
    await ctx.reply(`${randomResponse}\n\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /help.`);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–±—ä—è—Å–Ω–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ"
bot.action(/^explain_/, async (ctx: Context) => {
  try {
    // –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å timeout
    await ctx.answerCbQuery('ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ...');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await ctx.sendChatAction('typing');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    const processingMessage = await ctx.reply('ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å –æ–±—ä—è—Å–Ω—è–µ—Ç...');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
    const callbackData = (ctx.callbackQuery as any)?.data || '';
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const userMessageData = (global as any).explainData?.[callbackData];
    if (!userMessageData) {
      await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è');
      return;
    }
    
    // –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è
    const explainPrompt = `–†–µ—à–∞–π –∑–∞–¥–∞—á–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —É—á–∏—Ç–µ–ª—å –≤ —à–∫–æ–ª–µ. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–æ–≤, –Ω–∞–ø–∏—à–∏ —á—Ç–æ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –Ω–µ –≤ —Ç–µ–º—É –∏ —Ç—ã –Ω–µ –±—É–¥–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∏—Å–ø–æ–ª—å–∑—É—è Markdown —Ä–∞–∑–º–µ—Ç–∫—É.

–î–∞–≤–∞–π –ü–û–î–†–û–ë–ù–û–ï –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è —Å –ø–æ—à–∞–≥–æ–≤—ã–º–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏, –ø–æ—á–µ–º—É –∫–∞–∂–¥—ã–π —à–∞–≥ –¥–µ–ª–∞–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫.

–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
- –ó–∞–≥–æ–ª–æ–≤–∫–∏: # ## ###
- **–∂–∏—Ä–Ω—ã–π**, *–∫—É—Ä—Å–∏–≤*
- –°–ø–∏—Å–∫–∏: - –∏–ª–∏ 1.
- –ö–æ–¥: \`\`\`—è–∑—ã–∫\`\`\`
- –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞: $—Ñ–æ—Ä–º—É–ª–∞$ –∏–ª–∏ $$—Ñ–æ—Ä–º—É–ª–∞$$

–û–±—ä—è—Å–Ω—è–π –∫–∞–∂–¥—ã–π —à–∞–≥ –ø–æ–¥—Ä–æ–±–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ.`;

    let explainResponse: string;
    
    if (userMessageData.hasImage && userMessageData.imageData) {
      // –ï—Å–ª–∏ –±—ã–ª–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–≥–æ —Å–Ω–æ–≤–∞
      const fileId = userMessageData.imageData.fileId;
      
      const fileLink = await ctx.telegram.getFileLink(fileId);
      const response = await fetch(fileLink);
      const imageBuffer = await response.arrayBuffer();
      const base64Image = Buffer.from(imageBuffer).toString('base64');
      
      const messageForAI = userMessageData.text || '–û–±—ä—è—Å–Ω–∏ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–µ—à–µ–Ω–∏–µ —ç—Ç–æ–π –∑–∞–¥–∞—á–∏';
      
      explainResponse = await openRouterService.sendMessageWithImageBuffer(
        messageForAI,
        base64Image,
        'image/jpeg',
        explainPrompt
      );
    } else {
      // –ï—Å–ª–∏ –±—ã–ª —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
      const messageForAI = userMessageData.text || '–û–±—ä—è—Å–Ω–∏ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–µ—à–µ–Ω–∏–µ —ç—Ç–æ–π –∑–∞–¥–∞—á–∏';
      explainResponse = await openRouterService.sendUserMessage(messageForAI, explainPrompt);
    }
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    await ctx.deleteMessage(processingMessage.message_id);
    
    // –†–µ–Ω–¥–µ—Ä–∏–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const explainImagePath = await latexRenderer.renderMarkdownWithLatexToPng(explainResponse, {
      fontSize: 18,
      maxWidth: 1000,
      textAlign: 'left',
      lineHeight: 1.4,
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
    await ctx.replyWithPhoto({ source: explainImagePath }, {
      caption: 'üìö –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏',
    });

    // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    latexRenderer.cleanup(explainImagePath);
    
    // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    delete (global as any).explainData[callbackData];
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.catch((err: any, ctx: Context) => {
  console.error('–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:', err);
  ctx.reply('üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');

bot.launch()
  .then(() => {
    console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
    console.log('üì± –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ Telegram');
  })
  .catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:', error);
    process.exit(1);
  });

// Graceful stop
process.once('SIGINT', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...');
  latexRenderer.cleanupAll();
  bot.stop('SIGINT');
});

process.once('SIGTERM', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...');
  latexRenderer.cleanupAll();
  bot.stop('SIGTERM');
});

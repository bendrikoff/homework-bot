name: üöÄ –î–µ–ø–ª–æ–π Homework Bot (–í—Ö–æ–¥ –ø–æ –ø–∞—Ä–æ–ª—é)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4
      
    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: npm ci
      
    - name: üî® Build
      run: npm run build
      
    - name: üì¶ Create deployment archive
      run: |
        tar -czf homework-bot-deploy.tar.gz \
          dist/ \
          package*.json \
          ecosystem.config.js \
          docker-compose.direct.yml \
          Dockerfile \
          DEPLOY_OPTIONS.md \
          deploy.sh \
          env.example
        echo "üì¶ –°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤ Docker —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è: $(ls -lh homework-bot-deploy.tar.gz)"
        
    - name: üì§ Upload archive to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        source: "homework-bot-deploy.tar.gz"
        target: "/opt/homework-bot/"
        strip_components: 0
       
    - name: üñ•Ô∏è Deploy with Docker
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /opt/homework-bot
          
          echo "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..."
          if ! command -v docker &> /dev/null; then
            echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
            curl -fsSL https://get.docker.com | sh
            sudo systemctl enable docker
            sudo systemctl start docker
          fi
          
          if ! command -v docker-compose &> /dev/null; then
            echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
            sudo apt-get install -y docker-compose
          fi
          
          echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
          docker-compose down || true
          
          echo "üì¶ –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–¥..."
          if [ -f homework-bot-deploy.tar.gz ]; then
            tar -xzf homework-bot-deploy.tar.gz
            rm homework-bot-deploy.tar.gz
          else
            echo "‚ùå –ê—Ä—Ö–∏–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
          fi
          
          echo "üìÅ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
          if [ ! -f .env ]; then
            cp env.example .env
            echo "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª - –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã!"
          fi
          
          echo "üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."
          cp docker-compose.direct.yml docker-compose.yml
          docker-compose build
          
          echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
          docker-compose up -d
          
          echo "üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
          docker image prune -f
          
          echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
          echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
          docker-compose ps
